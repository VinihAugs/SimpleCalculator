{"ast":null,"code":"import Input from'./components/Input';import Button from'./components/Button';import{Container,Content,Row}from'./styles';import{useState}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const[currentNumber,setCurrentNumber]=useState('0');const[firstNumber,setFirstNumber]=useState('0');{/* function first number */}const[operation,setOperation]=useState('');{/* Function to delete */}const handleOnClear=()=>{setCurrentNumber('0');setFirstNumber('0');setOperation('');};const handleAddNumber=number=>{setCurrentNumber(prev=>`${prev==='0'?'':prev}${number}`);};{/* conditional to perform sum */}const handleSumNumbers=()=>{if(firstNumber==='0'){setFirstNumber(String(currentNumber));setCurrentNumber('0');setOperation('+');}else{const sum=Number(firstNumber)+Number(currentNumber);setCurrentNumber(String(sum));setOperation('');}};{/* conditional to perform subtraction*/}const handleSubNumbers=()=>{if(firstNumber==='0'){setFirstNumber(String(currentNumber));setCurrentNumber('0');setOperation('-');}else{const sum=Number(firstNumber)-Number(currentNumber);setCurrentNumber(String(sum));setOperation('');}};{/* conditional to perform division*/}const handleDivNumbers=()=>{if(firstNumber==='0'){setFirstNumber(String(currentNumber));setCurrentNumber('0');setOperation('/');}else{const sum=Number(firstNumber)/Number(currentNumber);setCurrentNumber(String(sum));setOperation('');}};{/* conditional to perform the square root*/}const handleRootNumbers=()=>{if(currentNumber!==''){const root=Math.sqrt(Number(currentNumber));setCurrentNumber(String(root));setOperation('');}};{/* conditional to perform multiplication*/}const handleMulNumbers=()=>{if(firstNumber==='0'){setFirstNumber(String(currentNumber));setCurrentNumber('0');setOperation('*');}else{const sum=Number(firstNumber)*Number(currentNumber);setCurrentNumber(String(sum));setOperation('');}};{/* conditional for the realization of \"equal\" */}const handleEquals=()=>{if(firstNumber!=='0'&&operation!==''&&currentNumber!=='0'){switch(operation){case'+':handleSumNumbers();break;case'-':handleSubNumbers();break;case'/':handleDivNumbers();break;case'√':handleRootNumbers();break;case'*':handleMulNumbers();break;default:break;}}};return/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsxs(Content,{children:[/*#__PURE__*/_jsx(Input,{value:currentNumber}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Button,{label:\"*\",onClick:handleMulNumbers}),/*#__PURE__*/_jsx(Button,{label:\"/\",onClick:handleDivNumbers}),/*#__PURE__*/_jsx(Button,{label:\"\\u221A\",onClick:handleRootNumbers}),/*#__PURE__*/_jsx(Button,{label:\"C\",onClick:handleOnClear})]}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Button,{label:\"7\",onClick:()=>handleAddNumber('7')}),/*#__PURE__*/_jsx(Button,{label:\"8\",onClick:()=>handleAddNumber('8')}),/*#__PURE__*/_jsx(Button,{label:\"9\",onClick:()=>handleAddNumber('9')}),/*#__PURE__*/_jsx(Button,{label:\"-\",onClick:handleSubNumbers})]}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Button,{label:\"4\",onClick:()=>handleAddNumber('4')}),/*#__PURE__*/_jsx(Button,{label:\"5\",onClick:()=>handleAddNumber('5')}),/*#__PURE__*/_jsx(Button,{label:\"6\",onClick:()=>handleAddNumber('6')}),/*#__PURE__*/_jsx(Button,{label:\"+\",onClick:handleSumNumbers})]}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Button,{label:\"1\",onClick:()=>handleAddNumber('1')}),/*#__PURE__*/_jsx(Button,{label:\"2\",onClick:()=>handleAddNumber('2')}),/*#__PURE__*/_jsx(Button,{label:\"3\",onClick:()=>handleAddNumber('3')}),/*#__PURE__*/_jsx(Button,{label:\"=\",onClick:handleEquals})]}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Button,{label:\"0\",onClick:()=>handleAddNumber('0')})})]})});};export default App;","map":{"version":3,"names":["Input","Button","Container","Content","Row","useState","jsx","_jsx","jsxs","_jsxs","App","currentNumber","setCurrentNumber","firstNumber","setFirstNumber","operation","setOperation","handleOnClear","handleAddNumber","number","prev","handleSumNumbers","String","sum","Number","handleSubNumbers","handleDivNumbers","handleRootNumbers","root","Math","sqrt","handleMulNumbers","handleEquals","children","value","label","onClick"],"sources":["/workspaces/SimpleCalculator/src/App.js"],"sourcesContent":["import Input from './components/Input';\nimport Button from './components/Button';\n\nimport { Container, Content, Row } from './styles';\nimport { useState } from 'react';\n\n\nconst App = () => {\n  const [ currentNumber, setCurrentNumber ] = useState('0');\n  const [firstNumber, setFirstNumber] = useState ('0');                {/* function first number */}\n  const [operation, setOperation] = useState ('');\n\n\n\n  {/* Function to delete */}\n  const handleOnClear = () => {\n    setCurrentNumber('0');\n    setFirstNumber('0');\n    setOperation('');\n  }\n\n  const handleAddNumber = (number) => {\n    setCurrentNumber(prev =>`${prev === '0' ? '':prev}${number}`);\n  }\n\n  {/* conditional to perform sum */}\n  const handleSumNumbers = () => {\n    if (firstNumber === '0'){\n        setFirstNumber(String(currentNumber));\n        setCurrentNumber('0')\n        setOperation('+')\n    } else {\n        const sum = Number(firstNumber) + Number(currentNumber);\n        setCurrentNumber(String(sum))\n        setOperation('')\n    }\n  }\n\n  {/* conditional to perform subtraction*/}\n  const handleSubNumbers = () => {\n    if (firstNumber === '0'){\n        setFirstNumber(String(currentNumber));\n        setCurrentNumber('0')\n        setOperation('-')\n    } else {\n        const sum = Number(firstNumber) - Number(currentNumber);\n        setCurrentNumber(String(sum))\n        setOperation('')\n    }\n  }\n\n  {/* conditional to perform division*/}\n  const handleDivNumbers = () => {\n    if (firstNumber === '0'){\n        setFirstNumber(String(currentNumber));\n        setCurrentNumber('0')\n        setOperation('/')\n    } else {\n        const sum = Number(firstNumber) / Number(currentNumber);\n        setCurrentNumber(String(sum))\n        setOperation('')\n    }\n  }\n\n  {/* conditional to perform the square root*/}\n  const handleRootNumbers = () => {\n    if (currentNumber !== '') {\n      const root = Math.sqrt(Number(currentNumber));\n  \n      setCurrentNumber(String(root));\n      setOperation('');\n    }\n  };\n  \n  {/* conditional to perform multiplication*/}\n  const handleMulNumbers = () => {\n    if (firstNumber === '0'){\n        setFirstNumber(String(currentNumber));\n        setCurrentNumber('0')\n        setOperation('*')\n    } else {\n        const sum = Number(firstNumber) * Number(currentNumber);\n        setCurrentNumber(String(sum))\n        setOperation('')\n    }\n  }\n\n  {/* conditional for the realization of \"equal\" */}\n  const handleEquals = () => {\n    if (firstNumber !== '0' && operation !== '' && currentNumber !== '0'){\n        switch(operation){\n          case '+':\n            handleSumNumbers();\n            break;\n          case '-':\n            handleSubNumbers();\n            break;\n          case '/':\n            handleDivNumbers();\n            break;\n          case '√':\n            handleRootNumbers();\n            break;\n          case '*':\n            handleMulNumbers();\n            break;\n          default: \n            break;\n        }\n    }\n  }\n\n  return (\n    <Container>\n      <Content>\n        <Input value = {currentNumber}/>\n\n        {/* variables for calculator formatting ( Button )*/}\n        <Row>\n          <Button label=\"*\" onClick={handleMulNumbers}/>\n          <Button label=\"/\" onClick={handleDivNumbers}/>\n          <Button label=\"√\" onClick={handleRootNumbers}/>\n          <Button label=\"C\" onClick={handleOnClear}/>\n        </Row>\n        <Row>\n          <Button label=\"7\" onClick={() => handleAddNumber('7')}/>\n          <Button label=\"8\" onClick={() => handleAddNumber('8')}/>\n          <Button label=\"9\" onClick={() => handleAddNumber('9')}/>\n          <Button label=\"-\" onClick={handleSubNumbers}/>\n        </Row>\n        <Row>\n          <Button label=\"4\" onClick={() => handleAddNumber('4')}/>\n          <Button label=\"5\" onClick={() => handleAddNumber('5')}/>\n          <Button label=\"6\" onClick={() => handleAddNumber('6')}/>\n          <Button label=\"+\" onClick={handleSumNumbers}/>\n        </Row>\n        <Row>\n          <Button label=\"1\" onClick={() => handleAddNumber('1')}/>\n          <Button label=\"2\" onClick={() => handleAddNumber('2')}/>\n          <Button label=\"3\" onClick={() => handleAddNumber('3')}/>\n          <Button label=\"=\" onClick={handleEquals}/>\n        </Row>\n        <Row>\n          <Button label=\"0\" onClick={() => handleAddNumber('0')}/>\n        </Row>\n\n      </Content>\n    </Container>);\n}\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}